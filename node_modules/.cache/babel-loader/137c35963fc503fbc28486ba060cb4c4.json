{"ast":null,"code":"var _jsxFileName = \"/Users/intelaki/Development/React/proyecto-react-hooks-en-udemy/src/pages/Results/index.js\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport queryString from \"query-string\";\nimport { searchMovie } from \"../../redux/actions/search\";\nimport { movieResults, isSearchLoading } from \"../../redux/selectors\";\nimport MovieResult from '../../components/MovieResult';\nexport default (({\n  location\n}) => {\n  const dispatch = useDispatch();\n  console.log(\"dispatch\");\n  console.log(dispatch); // const movies=useSelector(state=>{\n  //   console.log(\"state\");\n  //   console.log(state);\n  //   movieResults(state);\n  // });\n\n  const movies = useSelector(state => movieResults(state));\n  console.log(\"movies\");\n  console.log(movies);\n  useEffect(() => {\n    const {\n      movieName\n    } = queryString.parse(location.search);\n    console.log(movieName);\n\n    if (movieName && !movies) {\n      dispatch(searchMovie({\n        movieName\n      }));\n      console.log(\"if movies\");\n      console.log(movieName);\n    }\n  });\n  console.log(\"location\");\n  console.log(location);\n  console.log(\"queryString.parse(location.search)\");\n  console.log(queryString.parse(location.search));\n\n  const renderMovies = () => {\n    if (movies) {\n      return movies.map((value, index) => /*#__PURE__*/React.createElement(MovieResult, Object.assign({\n        key: index\n      }, value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 40\n        }\n      })));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, renderMovies());\n});","map":{"version":3,"sources":["/Users/intelaki/Development/React/proyecto-react-hooks-en-udemy/src/pages/Results/index.js"],"names":["React","useEffect","useDispatch","useSelector","Container","queryString","searchMovie","movieResults","isSearchLoading","MovieResult","location","dispatch","console","log","movies","state","movieName","parse","search","renderMovies","map","value","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,uBAA9C;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAH+B,CAI/B;AACA;AACA;AACA;AACA;;AACA,QAAMG,MAAM,GAAGX,WAAW,CAAEY,KAAD,IAAWR,YAAY,CAACQ,KAAD,CAAxB,CAA1B;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEe,MAAAA;AAAF,QAAgBX,WAAW,CAACY,KAAZ,CAAkBP,QAAQ,CAACQ,MAA3B,CAAtB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;;AACA,QAAIA,SAAS,IAAI,CAACF,MAAlB,EAA0B;AACxBH,MAAAA,QAAQ,CAACL,WAAW,CAAC;AAAEU,QAAAA;AAAF,OAAD,CAAZ,CAAR;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACD;AACF,GARQ,CAAT;AAUAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYR,WAAW,CAACY,KAAZ,CAAkBP,QAAQ,CAACQ,MAA3B,CAAZ;;AAEA,QAAMC,YAAY,GAAC,MAAI;AACrB,QAAGL,MAAH,EAAU;AACR,aAAOA,MAAM,CAACM,GAAP,CAAW,CAACC,KAAD,EAAOC,KAAP,kBAAe,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAEA;AAAlB,SAA4BD,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA1B,CAAP;AACD;AACF,GAJD;;AAKA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEF,YAAY,EAFd,CADF;AAOD,CAxCD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Container } from \"@material-ui/core\";\nimport queryString from \"query-string\";\n\nimport { searchMovie } from \"../../redux/actions/search\";\nimport { movieResults, isSearchLoading } from \"../../redux/selectors\";\nimport MovieResult from '../../components/MovieResult'\n\nexport default ({ location }) => {\n  const dispatch = useDispatch();\n  console.log(\"dispatch\");\n  console.log(dispatch);\n  // const movies=useSelector(state=>{\n  //   console.log(\"state\");\n  //   console.log(state);\n  //   movieResults(state);\n  // });\n  const movies = useSelector((state) => movieResults(state));\n  console.log(\"movies\");\n  console.log(movies);\n\n  useEffect(() => {\n    const { movieName } = queryString.parse(location.search);\n    console.log(movieName);\n    if (movieName && !movies) {\n      dispatch(searchMovie({ movieName }));\n      console.log(\"if movies\");\n      console.log(movieName);\n    }\n  });\n\n  console.log(\"location\");\n  console.log(location);\n  console.log(\"queryString.parse(location.search)\");\n  console.log(queryString.parse(location.search));\n\n  const renderMovies=()=>{\n    if(movies){\n      return movies.map((value,index)=><MovieResult key={index}{...value}/>);\n    }\n  }\n  return (\n    <Container>\n    {\n      renderMovies()\n    }\n    </Container>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}